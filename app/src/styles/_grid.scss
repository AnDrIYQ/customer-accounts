.MuiDataGrid-root {
  .MuiDataGrid-main {
    width: 100%;
  }
}

body {
  -webkit-tap-highlight-color: transparent;

  display: flex;
  justify-content: center;
  overflow: hidden;
}

html, body {
  overflow-x: hidden;
}

body::-webkit-scrollbar {
  width: 5px;
}

body::-webkit-scrollbar {
  width: 5px;
  background: gray;
}

body::-webkit-scrollbar-thumb {
  --h: var(--hue);
  --darker: calc(var(--light) - 10);
  background: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--darker) * 1%));
}

p {
  margin: 0;
}

h1 {
  margin: 0;
}

div {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  flex-grow: 1;
}

#root {
  display: block;
  width: 100vw;
  min-height: 100vh;
  height: 100%;
  justify-content: flex-start;
  align-items: flex-start;
}

// Modifiers
.float {
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, .4);
  z-index: 90;

  justify-content: center;
  align-items: center;

  transition: all .3s;
  pointer-events: none;
  opacity: 0;
  &.visible {
    transition: all .3s;
    pointer-events: all;
    opacity: 1;
  }
}

.notifications-block {
  z-index: 350;
}

.card > div:first-child:not(.breadcrumbs) {
  width: 100% !important;
}

:root {
  --hue: 0;
  --sat: 0;
  --light: 0;

  --threshold: 75;
  --border-threshold: 80;
}


// THEME COLORS STYLES
.theme_color {
  --h: var(--hue);
  background: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
  --switch: calc((var(--light) - var(--threshold)) * -100%);
  color: hsl(0, 0%, var(--switch));
}

input:focus, textarea:focus {
  --h: var(--hue);
  --switch: calc((var(--light) - var(--threshold)) * -100%);
  outline-width: 1px !important;
  --lighter: calc(var(--light) + 16);
  outline-color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter) * 1%)) !important;
  outline-offset: 0 !important;
}

button:hover, button:active {
  --h: var(--hue);
  --lighter: calc(var(--light) + 16);
  background: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter) * 1%)) !important;
}

button:focus {
  --h: var(--hue);
  --lighter: calc(var(--light) + 16);
  background: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter) * 1%)) !important;
  --lighter-shadow: calc(var(--lighter) + 30);
  box-shadow: 0 0 0 4px hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter-shadow) * 1%)) !important;
}

// Loading
.loading {
  position: relative;
}
.loading:not(.finished) {
  display: block !important;
}
.loading.finished::before {
  transition: opacity .3s;
  pointer-events: none;
  opacity: 0;
}
.loading.finished::after {
  transition: opacity .3s;
  pointer-events: none;
  opacity: 0;
}
.loading::before {
  pointer-events: all;
  transition: opacity .5s;
  opacity: 1;
  content: '';
  background: #ffffff;
  width: 100%;
  height: 100%;
  z-index: 120;
  position: absolute;
}
.loading::after {
  --h: var(--hue);

  --width: 64px;
  --height: 64px;

  display: block;
  transform: scale(0.5);

  top: calc(50% - var(--height) / 2 );
  left: calc(50% - var(--width) / 2 );

  content: '';
  transition: opacity .5s;
  opacity: 1;
  border: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%)) 4px solid;
  border-bottom-color: transparent;
  border-radius: 50%;
  width: var(--width);
  height: var(--height);
  z-index: 130;
  position: absolute;

  -webkit-animation: rotating 1s linear infinite;
  -moz-animation: rotating 1s linear infinite;
  -ms-animation: rotating 1s linear infinite;
  -o-animation: rotating 1s linear infinite;
  animation: rotating 1s linear infinite;
}

.breadcrumbs {
  flex-grow: 0;

  --h: var(--hue);
  color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
}
.route-card {
  min-height: 70vh;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  & > div {
    flex-grow: 0;
  }
}

.tabs {
  .tab {
    flex-direction: column;
    padding: 16px;
    min-height: 70vh;
    display: flex;
    align-items: flex-start;
    width: 100%;
  }
  & > div > div:first-child {
    width: 100%;
    padding-left: 1%;
    padding-right: 1%;
    & > button {
      &:hover, &:focus {
        --switch: calc((var(--light) - var(--threshold)) * -100%);
        color: hsl(0, 0%, var(--switch));
      }
      color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
    }
  }
  button {
    padding-top: 10px;
    padding-bottom: 10px;
    flex-grow: 1;
    --h: var(--hue);
    --switch: calc((var(--light) - var(--threshold)) * -100%);
    color: hsl(0, 0%, var(--switch));
    &[data-testid="accordion-title-element"] {
      color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
    }
    &.active {
      border-color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
    }
    &:hover, &:focus {
      --switch: calc((var(--light) - var(--threshold)) * -100%);
      color: hsl(0, 0%, var(--switch));
    }
  }
}

select {
  max-width: 200px;
  min-width: 200px;
  &:focus, &:active {
    --h: var(--hue);
    --switch: calc((var(--light) - var(--threshold)) * -100%);
    outline-width: 1px !important;
    --lighter: calc(var(--light) + 16);
    outline-color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter) * 1%)) !important;
    outline-offset: 0 !important;
    border-color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--lighter) * 1%)) !important;
  }
}

.select-container {
  width: 100%;
  & > div {
    flex-grow: 0;
  }
}

input[type="file"] {
  border: none !important;
  --h: var(--hue);
  background: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
  --switch: calc((var(--light) - var(--threshold)) * -100%);
  color: hsl(0, 0%, var(--switch));
  cursor: pointer;
}

input::file-selector-button {
  display: none;
}

.MuiSwitch-root {
  .MuiSwitch-colorSecondary.Mui-checked {
    --h: var(--hue);
    color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
  }
  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {
    --h: var(--hue);
    background-color: hsl(var(--h), calc(var(--sat) * 1%), calc(var(--light) * 1%));
  }
}